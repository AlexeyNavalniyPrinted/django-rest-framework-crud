name: release

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  env: pipeline

jobs:
  test:
    name: Test code
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.6
          cache: 'pip'
      - run: pip install -r api/requirements.txt
      - run: python api/manage.py test

  build:
    needs: [ test ]
    name: Build and push docker image
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            alex23451234/django-api:${{ github.sha }}
            alex23451234/django-api:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
  deploy:
    name: Deploy to kubernetes cluster
    if: github.ref == 'refs/heads/master'
    needs: [ test, build ]
    runs-on: ubuntu-latest
    steps:
      - name: Set the Kubernetes context
        uses: azure/k8s-set-context@v4
        with:
          method: service-account
          k8s-url: ${{ secrets.K8S_URL }}
          k8s-secret: ${{ secrets.KUBERNETES_SECRET }}

      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Deploy to the Kubernetes cluster
        uses: azure/k8s-deploy@v1
        with:
          namespace: default
          manifests: |
            devops/kubernetes/manifest.yaml
          images: |
            alex23451234/django-api:${{ github.sha }}
  failure_notifications:
    runs-on: ubuntu-latest
    if: failure()
    needs: [ test, build, deploy ]
    steps:
      - name: Send notification to Slack
        id: slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "text": "GitHub build result: ${{ job.status }}\nCommit message: $${{ github.event.head_commit.message }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "GitHub build result: ${{ job.status }}\nCommit message: $${{ github.event.head_commit.message }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Send notification to Telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.telegram_chat  }}
          token: ${{ secrets.telegram_token }}
          message: |
            GitHub build result: ${{ job.status }}${{ github.event.pull_request.html_url || github.event.head_commit.url }}

  success_notifications:
    runs-on: ubuntu-latest
    if: success()
    needs: [ test, build, deploy ]
    steps:
      - name: Send notification to Slack
        id: slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "GitHub build result": "${{ job.status }}",
              "Commit message": "${{ github.event.head_commit.message }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Send notification to Telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.telegram_chat  }}
          token: ${{ secrets.telegram_token }}
          message: |
            GitHub build result: ${{ job.status }}${{ github.event.pull_request.html_url || github.event.head_commit.url }}